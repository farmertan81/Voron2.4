[include mainsail.cfg]
[include stealthburner_leds.cfg]
[include TEST_SPEED.cfg] 
#[include Macros.cfg]
# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[mcu]
canbus_uuid: f4a842d1c8da

[mcu sb2040]
#canbus_uuid: beab2f5f6284 #replacement board#
canbus_uuid: 56623dd13b35 
#[adxl345]
#cs_pin: sb2040:gpio1
#spi_software_sclk_pin: sb2040:gpio0
#spi_software_mosi_pin: sb2040:gpio3
#spi_software_miso_pin: sb2040:gpio2
#axes_map: -z, y, -x


#[resonance_tester]
#accel_chip: adxl345
#probe_points: 175,175,20

##-----------THERMISTORS-----------------------##
[temperature_sensor SB2040]
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: sb2040:gpio26
min_temp: 5
max_temp: 100

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor octopus]
sensor_type: temperature_mcu
min_temp: 10
max_temp: 100


#[temperature_sensor enclosure]
#sensor_type: Generic 3950
#sensor_pin: PF5

[verify_heater heater_bed] check_gain_time: 150
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 600  
max_accel: 15000          
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0


#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps:32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: sb2040:gpio29
position_min: 0
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 200
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
# slow 
#run_current: 0.8
run_current: 1.0
sense_resistor: 0.110
#stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps:32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
position_endstop: 355
position_max: 355

##--------------------------------------------------------------------
homing_speed: 150  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
#slow
#run_current: 0.8
run_current: 1.0
sense_resistor: 0.110
#stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps:32

endstop_pin: probe:z_virtual_endstop
position_max: 310

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 0

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
#slow
run_current: 0.8
#run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 99999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps:32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
#slow
run_current: 0.8
#run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 99999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps:32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
#slow
run_current: 0.8
#run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 99999

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps:32

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
#slow
run_current: 0.8
#run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 99999

[virtual_sdcard]
path: /home/pi/printer_data/gcodes

#####################################################################
#   Extruder
#####################################################################
[extruder]

rotation_distance: 47.088
gear_ratio: 9:1
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.75
max_extrude_only_distance: 101

step_pin: sb2040:gpio9
dir_pin: sb2040:gpio10
enable_pin: !sb2040:gpio7

heater_pin: sb2040:gpio6
sensor_pin: sb2040:gpio27
sensor_type: PT1000
pullup_resistor: 1000
min_temp: 5
max_temp: 285
max_power: 1.0
min_extrude_temp: 170

pressure_advance: 0.035
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: sb2040:gpio8
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

[cartographer]
canbus_uuid: ed1e204f5a62 # idm 0fa6e1db3d24

speed: 40.
#   Z probing dive speed.
lift_speed: 5.
#   Z probing lift speed.
backlash_comp: 0.01212
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
x_offset: 0.
#   X offset of cartographer from the nozzle.
y_offset: 21.1
#   Y offset of cartographer from the nozzle.
trigger_distance: 2.
#   cartographer trigger distance for homing.
trigger_dive_threshold: 1.5
#   Threshold for range vs dive mode probing. Beyond `trigger_distance +
#   trigger_dive_threshold` a dive will be used.
trigger_hysteresis: 0.006
#   Hysteresis on trigger threshold for untriggering, as a percentage of the
#   trigger threshold.
cal_nozzle_z: 0.1
#   Expected nozzle offset after completing manual Z offset calibration.
cal_floor: 0.1
#   Minimum z bound on sensor response measurement.
cal_ceil:5.
#   Maximum z bound on sensor response measurement.
cal_speed: 1.0
#   Speed while measuring response curve.
cal_move_speed: 10.
#   Speed while moving to position for response curve measurement.
default_model_name: default
#   Name of default cartographer model to load.
mesh_main_direction: x
#   Primary travel direction during mesh measurement.
#mesh_overscan: -1
#   Distance to use for direction changes at mesh line ends. Omit this setting
#   and a default will be calculated from line spacing and available travel.
mesh_cluster_size: 1
#   Radius of mesh grid point clusters.
mesh_runs: 2
#   Number of passes to make during mesh scan.

[lis2dw]
cs_pin: cartographer:PA3
spi_bus: spi1

[resonance_tester]
accel_chip: lis2dw
probe_points: 175, 175, 20


[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 310,310
horizontal_move_z: 5
probe_count: 15, 15
fade_start: 1.0
fade_end: 10.0
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: .2


#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
##  Uncomment the following line if using the default SSR wiring from the docs site
heater_pin: PA3
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
#heater_pin: PA1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 122

#####################################################################
#   Fan Control
#####################################################################

## SB2040 cooling Fan##
[controller_fan SB2040_Fan]
pin: sb2040:gpio15
stepper: extruder
max_power: 1
#fan_speed: .8

##  Print Cooling Fan - FAN0
[fan]
pin: sb2040:gpio13
off_below: 0.10


##  Hotend Fan - FAN1
[heater_fan hotend_fan]
pin: sb2040:gpio14
max_power: 1.0
#kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

##  Controller fan - FAN2
[controller_fan controller_fan]
pin: PD12
#kick_start_time: 0.5
heater: heater_bed
max_power: 1
fan_speed: 1

##  controller fan - FAN3
[controller_fan controller_fan2]
pin: PD13
#kick_start_time: 0.5
heater: heater_bed
max_power: 1
fan_speed: 1


#  Nevermorefilter fan - FAN4
#[heater_fan filter_fan]
#pin: PD14
#max_power: 0.8
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#fan_speed: 0.7

#  Nevermorefilter fan - FAN4
#[heater_fan filter_fan2]
#pin: PD15
#max_power: 0.8
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#fan_speed: 0.7


#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
#[output_pin caselight]
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
#home_xy_position:-10,-10

#OLD-------------------
#home_xy_position:229,345
#NEW=================
home_xy_position:175,175
speed:100
z_hop:10


##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

##  Gantry Corners for 350mm Build
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#--------------------------------------------------------------------
speed: 300
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------


##  RepRapDiscount 128x64 Full Graphic Smart Controller
#[display]
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------


##  mini12864 LCD Display
[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

##  To control Neopixel RGB in mini12864 display
[neopixel btt_mini12864]
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


#####################################################################
#   Macros
#####################################################################






[gcode_macro G32]
gcode:
    STATUS_HOMING
    BED_MESH_CLEAR

    ; stealth chop tuning process
    # motors off
    ;M84
    ;G4 P200

    # enable motors (this seems to energize the steppers in Klipper and no micro-moves are needed)
    ; SET_STEPPER_ENABLE STEPPER=stepper_x  ENABLE=1
    ; SET_STEPPER_ENABLE STEPPER=stepper_y  ENABLE=1
    ; SET_STEPPER_ENABLE STEPPER=stepper_z  ENABLE=1
    ; SET_STEPPER_ENABLE STEPPER=stepper_z1 ENABLE=1
    ; SET_STEPPER_ENABLE STEPPER=stepper_z2 ENABLE=1
    ; SET_STEPPER_ENABLE STEPPER=stepper_z3 ENABLE=1
    #wait at least 130ms for StealthChop to sense standstill current
    ;G4 P200

    #now proceed to home as normal
    STATUS_HOMING
    G28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    STATUS_HOMING
    G28



[gcode_macro PARK_REAR]
gcode:
    SAVE_GCODE_STATE NAME=PARK_REAR
    ; park the head at the front of the printer
    G90
    G1 X150 Y300 F3000.0
    RESTORE_GCODE_STATE NAME=PARK_REAR

[gcode_macro PARK_CENTER]
gcode:
    SAVE_GCODE_STATE NAME=PARK_CENTER
    ; park the head at the front of the printer
    G90
    G1 X150 Y150 F3000.0
    RESTORE_GCODE_STATE NAME=PARK_CENTER

[gcode_macro PARK_FRONT]
gcode:
    SAVE_GCODE_STATE NAME=PARK_FRONT
    ; park the head at the front of the printer
    G90
    G1 X150 Y50 F3000.0
    RESTORE_GCODE_STATE NAME=PARK_FRONT

[gcode_macro SAFE_LIFT_Z]
gcode:
    SAVE_GCODE_STATE NAME=SAFE_LIFT_Z
    # user parameters
    {% set z_height      = params.Z|default(0.0)|float %}
    {% set speed         = params.F|default(printer.gcode_move.speed)|int %}
    {% set axis_maximum  = printer.toolhead.axis_maximum %}
	{% set position      = printer.toolhead.position     %}

    # compute the minimum safe upward move size
    {% set z_height = [z_height, axis_maximum.z - position.z]|min|float%}

    G91
    G1 Z{z_height} F{speed}

    RESTORE_GCODE_STATE NAME=SAFE_LIFT_Z

[gcode_macro PRINT_AREA_BED_MESH_CALIBRATE]
description: Sets the bed mesh area based on the size & location of the print
gcode:
    # defaults from bed_mesh
    {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
    {% set bed_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
    {% set bed_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
    {% set bed_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
    {% set bed_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}
    {% set max_probe_count_x = bedMeshConfig.probe_count.split(",")[0]|int %}
    {% set max_probe_count_y = bedMeshConfig.probe_count.split(",")[1]|int %}
    # user parameters
    {% set area_min_x = params.PRINT_START_X|default(bed_min_x)|float %}
    {% set area_min_y = params.PRINT_START_Y|default(bed_min_y)|float %}
    {% set area_max_x = params.PRINT_END_X|default(bed_max_x)|float %}
    {% set area_max_y = params.PRINT_END_Y|default(bed_max_y)|float %}
    {% set mesh_area_padding = params.MESH_ARE_PADDING|default(5.0)|float %}
    {% set min_probe_count_x = params.MIN_PROBE_COUNT_X|default(3)|int %}
    {% set min_probe_count_y = params.MIN_PROBE_COUNT_Y|default(3)|int %}

    # add padding to the print area if possible
    {% set area_min_x = [area_min_x - mesh_area_padding, bed_min_x]|max %}
    {% set area_min_y = [area_min_y - mesh_area_padding, bed_min_y]|max %}
    {% set area_max_x = [area_max_x + mesh_area_padding, bed_max_x]|min %}
    {% set area_max_y = [area_max_y + mesh_area_padding, bed_max_y]|min %}

    # compute raw scaled values for the probe counts from 0 to max_probe_count_x/y
    {% set probe_count_unscaled_x = ((area_max_x - area_min_x)/bed_max_x) * max_probe_count_x|float %}
    {% set probe_count_unscaled_y = ((area_max_y - area_min_y)/bed_max_y) * max_probe_count_y|float %}

    # scale those values up from: 0 - min_probe_count_x/y to the scale: min_probe_count_x/y - min_probe_count_x/y
    {% set probe_count_x = ((max_probe_count_x - min_probe_count_x) * probe_count_unscaled_x / max_probe_count_x + min_probe_count_x)|round|int %}
    {% set probe_count_y = ((max_probe_count_y - min_probe_count_y) * probe_count_unscaled_y / max_probe_count_y + min_probe_count_y)|round|int %}

    {% set relative_reference_index = (((probe_count_x * probe_count_y) - 1) / 2)|int %}

    BED_MESH_CALIBRATE MESH_MIN={area_min_x},{area_min_y} MESH_MAX={area_max_x},{area_max_y} PROBE_COUNT={("%d,%d" % (probe_count_x,probe_count_y))} RELATIVE_REFERENCE_INDEX={relative_reference_index}

[gcode_macro PURGE_LINE]
gcode:
    SAVE_GCODE_STATE NAME=PURGE_LINE
    {% set purge_start_x = params.PRINT_START_X|default(5.0)|float %}
    {% set purge_start_y = params.PRINT_START_Y|default(-5.0)|float %}

    ; purge/prime nozzle
    G90 ; use absolute coordinates
    ; go to the start of the print area, but -5 in Y
    G1 X{purge_start_x} Y{purge_start_y} Z0.3 F7200.0 ; go to the purge start location
    G91 ; relative coordinates
    M83 ; extruder relative mode
    G92 E0.0
    G1 X40.0 E10.0 F1000.0  ; narrow start line
    G1 X40.0 E15.0 F1000.0  ; priming thick outro line
    G92 E0.0
    G1 X3.0 Y3.0 F1000.0    ; move the nozzle away from the end of the purge line so the print doesnt drage the nozzle back throught it.
    G1 F7200.0

    RESTORE_GCODE_STATE NAME=PURGE_LINE


[gcode_macro PRINT_WARMUP]
description: Perform initial homing and heating tasks
variable_parameter_EXTRUDER_TEMP : 0
variable_parameter_BED_TEMP : 0
variable_parameter_PRINT_START_X : 0
variable_parameter_PRINT_START_Y : 0
variable_parameter_PRINT_END_X : 0
variable_parameter_PRINT_END_Y : 0
variable_callback : None
gcode:
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
   # SHOW_BUILD_SHEET

    M104 S{EXTRUDER_TEMP * 0.75}        ; set extruder temperature to 75%
    M140 S{BED_TEMP}                    ; set bed temprature
    M106 S25                            ; Enable the part cooling fan to keep the probe and cooling ducts cool during heat-up
    G32                                 ; home all axes
    STATUS_HEATING
    PARK_CENTER                         ; place tool head in the middle of the print volume for even frame heating

    # wait for top bed sensor to be in thermal equilibrium:
    HEAT_SOAK HEATER='heater_bed' TARGET={BED_TEMP} SOAKER='temperature_sensor top_bed' CANCEL='CANCEL_PRINT'


[gcode_macro PRINT_START]
description: perform calibration and get ready to print
variable_parameter_EXTRUDER_TEMP : 0
variable_parameter_BED_TEMP : 0
variable_parameter_PRINT_START_X : 0
variable_parameter_PRINT_START_Y : 0
variable_parameter_PRINT_END_X : 0
variable_parameter_PRINT_END_Y : 0
gcode:
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    # TODO: get this value from the Probe x_offset (x_offset + 2x mesh padding + 1)
    {% set safe_max_x = 300 - 54 %}
    {% set start_x = params.PRINT_START_X|default(0)|float %}
    {% set start_y = params.PRINT_START_Y|default(0)|float %}
    {% set end_x = params.PRINT_END_X|default(300.0)|float %}
    {% set end_y = params.PRINT_END_Y|default(300.0)|float %}
    # Enlarge the start area as needed to contain the purge line:
    {% set start_x = [start_x, safe_max_x]|min %}
    {% set end_x   = [end_x, safe_max_x]|min %}
    {% set start_y = start_y - 5 %}

    CLEAR_PAUSE
  #  SHOW_BUILD_SHEET

    #######
    # This section is a duplicate of what happens in the warmup to guard against old prints that only call PRINT_START
    # generally the printer will pass through this almost instantly
    M104 S{EXTRUDER_TEMP * 0.75}        ; set extruder temperature to 75%
    M140 S{BED_TEMP}                    ; set bed temprature
    M106 S25                            ; Enable the part cooling fan to keep the probe and cooling ducts cool during heat-up
    {% if not 'xyz' in printer.toolhead.homed_axes %}
        G32                             ; home all axes if not homed
    {% endif %}
    # wait for bed to reach temperature
   # STATUS_HEATING
    M190 S{BED_TEMP}
    #######

    # mesh bed level
    #STATUS_MESHING
   # PRINT_AREA_BED_MESH_CALIBRATE PRINT_START_X={start_x} PRINT_START_Y={start_y} PRINT_END_X={end_x} PRINT_END_Y={end_y}
    # calibrate Klicky probe Z
  #  status_calibrating_z
  #  CALIBRATE_Z
   # APPLY_BUILD_SHEET_ADJUSTMENT
    ; move to the front of the printer to allow user to remove any oozing
  #  SAFE_LIFT_Z Z=25 F=3000
   # PARK_FRONT                          ; Move tool head to front to facilitate ooze cleanup
   # STATUS_HEATING
    M109 S{EXTRUDER_TEMP}               ; Wait for nozzle to finish heating
    M106 S0                             ; Done waiting, part cooling off and back to slicer control
    SET_FRAME_COMP ENABLE=1
    #SHOW_BUILD_SHEET
    #STATUS_PRINTING
   # PURGE_LINE PRINT_START_X={start_x} PRINT_START_Y={start_y}
    ; if a callback was supplied to print_start, call it
    {% set print_start_macro = printer['gcode_macro PRINT_START'] %}
    {% if print_start_macro.callback  %}
        {print_start_macro.callback}
    {% endif %}

[gcode_macro PRINT_END]
description: tasks to rese the printer state and cool everything down.
gcode:
    M400                           ; wait for move buffer to clear
    G92 E0                         ; zero the extruder
    G91                            ; relative positioning
    TURN_OFF_HEATERS
    M107                           ; turn off fan
   # STATUS_OFF
  #  BED_MESH_CLEAR
    SET_FRAME_COMP ENABLE=0
    SAFE_LIFT_Z Z=10 F=3000.0
    PARK_REAR
    #STATUS_OFF
    # TODO: it would be nice to keep the part cooling fan on until the hot end fan shuts off.

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    M107
    CLEAR_PAUSE
   # SDCARD_RESET_FILE
    SAFE_LIFT_Z Z=10 F=3000.0
    PARK_REAR
   # STATUS_OFF
    BED_MESH_CLEAR
    SET_FRAME_COMP ENABLE=0
    BASE_CANCEL_PRINT

[gcode_macro list_sensors]
gcode:
  { action_respond_info(printer.heaters.available_heaters | join(', ')) }
  { action_respond_info(printer.heaters.available_sensors | join(', ')) }

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 18.573
#*# pid_ki = 1.457
#*# pid_kd = 59.201
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 37.653
#*# pid_ki = 1.237
#*# pid_kd = 286.632
#*# z_offset = 0.725
#*#
#*# [input_shaper]
#*# shaper_type_x = zv
#*# shaper_freq_x = 64.2
#*# shaper_type_y = zv
#*# shaper_freq_y = 39.4
#*#
#*# [cartographer model default]
#*# model_coef = 1.443908004342426,
#*# 	1.867657214648755,
#*# 	0.746489311480663,
#*# 	0.36095046411018306,
#*# 	0.35527545842490926,
#*# 	0.28084816407901536,
#*# 	-0.23518860258104657,
#*# 	-0.21021896737293552,
#*# 	0.24009492535105334,
#*# 	0.15294458963206198
#*# model_domain = 3.3009356766273704e-07,3.3978076794003575e-07
#*# model_range = 0.100000,5.000000
#*# model_temp = 22.736916
#*# model_offset = -0.69500
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.051040, 0.047345, 0.049151, 0.056537, 0.056029, 0.061079, 0.069998, 0.072536, 0.074606, 0.076598, 0.071964, 0.070422, 0.066721, 0.055529, 0.068939
#*# 	0.032559, 0.026615, 0.028712, 0.034121, 0.034567, 0.041297, 0.048183, 0.047018, 0.048050, 0.049705, 0.047769, 0.045440, 0.046827, 0.033805, 0.029980
#*# 	0.010203, 0.004441, 0.001892, 0.006662, 0.015736, 0.028247, 0.028993, 0.022800, 0.023202, 0.025767, 0.026756, 0.026369, 0.019373, 0.005399, -0.003704
#*# 	-0.000342, -0.006374, -0.000878, 0.003192, 0.016897, 0.014595, 0.018522, 0.015496, 0.016755, 0.019870, 0.016285, 0.009148, 0.005621, -0.007096, -0.015026
#*# 	0.010617, 0.007137, 0.005129, 0.020272, 0.024772, 0.030761, 0.015618, 0.010745, 0.011276, 0.020698, 0.014897, 0.012919, 0.007612, -0.002685, -0.012128
#*# 	0.018070, 0.005559, 0.005893, 0.006917, 0.013962, 0.029371, 0.031084, 0.029489, 0.021241, 0.019804, 0.018906, 0.014624, 0.007131, -0.006285, -0.013527
#*# 	0.033179, 0.025188, 0.012002, 0.014914, 0.007884, 0.010492, 0.013922, 0.019337, 0.014898, 0.008984, 0.016129, 0.015692, 0.008245, -0.007243, -0.018343
#*# 	0.018652, 0.001824, -0.007944, -0.001916, 0.006200, 0.008248, 0.017329, 0.011522, 0.011165, 0.009525, 0.012424, 0.005020, -0.003135, -0.015436, -0.024846
#*# 	-0.002961, -0.004250, -0.004722, -0.014316, -0.004175, 0.001167, 0.015281, 0.019677, 0.014646, 0.007451, 0.006394, -0.000117, -0.005640, -0.017204, -0.027889
#*# 	-0.001688, 0.002742, -0.007424, -0.003647, -0.002124, 0.010170, 0.013846, 0.011709, 0.008558, 0.007286, 0.005423, -0.001449, -0.004468, -0.015702, -0.024137
#*# 	-0.005103, -0.011065, -0.012823, -0.006592, 0.002589, 0.009108, 0.014030, 0.004986, 0.012320, 0.009597, 0.005040, 0.000384, -0.003506, -0.013796, -0.020648
#*# 	-0.002931, -0.009233, -0.017494, -0.011075, 0.007795, 0.021356, 0.026445, 0.023988, 0.017538, 0.013137, 0.009691, 0.005937, 0.003782, -0.008574, -0.016444
#*# 	0.019569, 0.015316, 0.015764, 0.009015, 0.012520, 0.021228, 0.031302, 0.034275, 0.030591, 0.029802, 0.025495, 0.022684, 0.019663, 0.010209, 0.004246
#*# 	0.037888, 0.029912, 0.027973, 0.033504, 0.041553, 0.049907, 0.056279, 0.055238, 0.054476, 0.056286, 0.056146, 0.051411, 0.048735, 0.037397, 0.031069
#*# 	0.063337, 0.053564, 0.049956, 0.055049, 0.062217, 0.068931, 0.076746, 0.078663, 0.078703, 0.080740, 0.082767, 0.082180, 0.079410, 0.066142, 0.060417
#*# x_count = 15
#*# y_count = 15
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
